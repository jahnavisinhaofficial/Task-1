/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int diameter(TreeNode* root,int & dia) {
        if(!root)
        return 0;

        int leftHeight=diameter(root->left,dia);
        int rightHeight=diameter(root->right,dia);
        //doameter calc
        dia=max(dia,leftHeight+rightHeight);

        int height= max(leftHeight,rightHeight)+1;
        return height;
    }
    int diameterOfBinaryTree(TreeNode* root){
        int dia=0;
        diameter(root,dia);
        return dia;
    }
};
